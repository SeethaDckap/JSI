<?php
/**
 * Copyright Â© 2010-2018 Epicor Software Corporation: All Rights Reserved
 */
namespace Epicor\AccessRight\Block\Adminhtml\Roles\Edit\Tab;


/**
 * Role Details Form
 *
 * @category   Epicor
 * @package    Epicor_AccessRight
 * @author     Epicor Websales Team
 */
class Details extends \Magento\Backend\Block\Widget\Form\Generic
{

    /**
     * @var \Magento\Backend\Model\Session
     */
    protected $backendSession;

    /**
     * @var \Magento\Customer\Model\CustomerFactory
     */
    protected $customerCustomerFactory;

   /**
     * @var \Epicor\Comm\Model\Config\Source\YesnonulloptionFactory
     */
    protected $commConfigSourceYesnonulloptionFactory;

    /**
     * @var \Magento\Framework\Registry
     */
    protected $registry;

    /**
     * @var \Magento\Framework\Data\FormFactory
     */
    protected $formFactory;

    /**
     * @var \Magento\Framework\Locale\ResolverInterface
     */
    protected $_localeResolver;


    public function __construct(
        \Magento\Backend\Block\Template\Context $context,
        \Magento\Customer\Model\CustomerFactory $customerCustomerFactory,
        \Epicor\Comm\Model\Config\Source\YesnonulloptionFactory $commConfigSourceYesnonulloptionFactory,
        \Magento\Framework\Registry $registry,
        \Magento\Framework\Data\FormFactory $formFactory,
        \Magento\Framework\Locale\ResolverInterface $localeResolver,
        array $data = []
    )
    {
        $this->formFactory = $formFactory;
        $this->backendSession = $context->getBackendSession();
        $this->customerCustomerFactory = $customerCustomerFactory;

        $this->commConfigSourceYesnonulloptionFactory = $commConfigSourceYesnonulloptionFactory;
        $this->registry = $registry;
        $this->_localeResolver = $localeResolver;        

        parent::__construct(
            $context,
            $registry,
            $formFactory,
            $data
        );
        $this->_title = 'Details';
    }

    /**
     * Builds Role Details Form
     *
     * @return \Epicor\AccessRight\Block\Adminhtml\Roles\Edit\Tab\Details
     */

    protected function _prepareForm()
    {
        $role = $this->getRole();
        /* @var $role Epicor/AccessRight/Model/RoleModel */

        $form = $this->formFactory->create();
        $formData = $this->backendSession->getFormData(true);

        if (empty($formData)) {
            $formData = $role->getData();
        } else {
            if (is_array($formData)) {
                $role->addData($formData);
            }
        }

        $this->addPrimaryFields($form, $role);
        $this->addActiveFields($form, $role);
        $this->addFlagFields($form, $role);

        $format = \Magento\Framework\Stdlib\DateTime::DATETIME_PHP_FORMAT;

        if ($role->getStartDate()) {

            $date = $this->_localeDate->date($role->getStartDate())->format($format);
            $dateSplit = explode(' ', $date);
            $formData['start_date'] = $dateSplit[0];
            $formData['start_time'] = str_replace(':', ',', $dateSplit[1]);
        }

        if ($role->getEndDate()) {

            $date = $this->_localeDate->date($role->getEndDate())->format($format);

            $dateSplit = explode(' ', $date);
            $formData['end_date'] = $dateSplit[0];
            $formData['end_time'] = str_replace(':', ',', $dateSplit[1]);
        }


        $form->addValues($formData);
        $this->setForm($form);

        return parent::_prepareForm();
    }

    /**
     * Adds Primary fields to the form
     *
     * @param \Magento\Framework\Data\Form $form
     * @param \Epicor\AccessRight\Model\RoleModel $role
     *
     * @return void
     */
    protected function addPrimaryFields($form, $role)
    {
        $fieldset = $form->addFieldset('primary', array('legend' => __('Primary Details')));
        /* @var $fieldset Varien_Data_Form_Element_Fieldset */

        $disableEdit =  false;
        /* If Controller is duplicate then Id field value should new autogenerated */
        $duplicateId = $this->getRequest()->getParam('cid', null);
        if($duplicateId!=null){

            $fieldset->addField(
                'cid', 'hidden', array(
                    'required' => false,
                    'name' => 'cid',
                    'value' => $duplicateId,
                )
            );
        }

        $fieldset->addField(
            'title', 'text', array(
                'label' => __('Title'),
                'required' => true,
                'name' => 'title'
            )
        );

        $fieldset->addField(
            'notes', 'textarea', array(
            'label' => __('Notes'),
            'required' => false,
            'name' => 'notes'
            )
        );
        $fieldset->addField(
            'description', 'textarea', array(
            'label' => __('Description'),
            'required' => false,
            'name' => 'description'
            )
        );
    }

      /**
     * Adds Primary fields to the form
     *
     * @param \Magento\Framework\Data\Form $form
     *
     * @return void
     */
    protected function addActiveFields($form, $role)
    {
        $fieldset = $form->addFieldset('active_fields', array('legend' => __('Active Details')));
        /* @var $fieldset Varien_Data_Form_Element_Fieldset */

        $disableEdit = false;
        $hideActiveUi = false;

        if (empty($hideActiveUi)) {
            $fieldset->addField(
                'active', 'checkbox', array(
                'label' => __('Is Active?'),
                'tabindex' => 1,
                'value' => 1,
                'name' => 'active',
                'checked' => $role->getActive()
                )
            );

            $after = '<small class="datepicker-comments" style="margin:0 0 0 38px;">YYYY-MM-DD</small><br /><small>To Update Date Click on Calendar Icon</small>';

            $fieldset->addField(
                'start_date', 'date', array(
                'label' => __('From Date'),
                'comment' => 'Change Date Using Date Picker',
                'disabled' => $disableEdit,
                'tabindex' => 1,
                'class' => 'validate-date',
                'required' => false,
                'name' => 'start_date',
                'image' => $this->getSkinUrl('images/grid-cal.gif'),
                'date_format' => 'yyyy-MM-dd',
                'after_element_html' => $after,
                )
            );
            $fieldset->addField(
                'select_start_time', 'checkbox', array(
                'label' => __('Select Start Time?'),
                'tabindex' => 1,
                'name' => 'select_start_time',
                'disabled' => $disableEdit,
                )
            );
            $fieldset->addField(
                'start_time', 'time', array(
                'label' => __('Start Time'),
                'tabindex' => 1,
                'class' => 'validate-time',
                'required' => false,
                'name' => 'start_time',
                'format' => 'hh:mm:ss',
                'comment' => 'hh:mm:ss',
                'disabled' => $disableEdit,
                )
            );

            $fieldset->addField(
                'end_date', 'date', array(
                'label' => __('To Date'),
                'comment' => 'Change Date Using Date Picker',
                'tabindex' => 1,
                'class' => 'validate-date',
                'required' => false,
                'name' => 'end_date',
                'image' => $this->getSkinUrl('images/grid-cal.gif'),
                'date_format' => 'yyyy-MM-dd',
                'after_element_html' => $after,
                'disabled' => $disableEdit,
                )
            );

            $fieldset->addField(
                'select_end_time', 'checkbox', array(
                'label' => __('Select End Time?'),
                'tabindex' => 1,
                'name' => 'select_end_time',
                'disabled' => $disableEdit,
                )
            );
            $fieldset->addField(
                'end_time', 'time', array(
                'label' => __('End Time'),
                'tabindex' => 1,
                'class' => 'validate-time',
                'name' => 'end_time',
                'format' => 'hh:mm:ss',
                'comment' => 'hh:mm:ss',
                'disabled' => $disableEdit,
                )
            );

            $isEnabledJs = $fieldset->addField('is_enabled_js', 'hidden', array('name' => 'is_enabled_js'), false);
            $isEnabledJs->setAfterElementHtml($this->getEnableDisableJs());
        }
    }

    private function getEnableDisableJs()
    {
        return $this->getLayout()
            ->createBlock('\Epicor\AccessRight\Block\Adminhtml\Roles\Edit\Tab\Details')
            ->setTemplate('epicor/roles/details/time-field.phtml')
            ->_toHtml();
    }

    /**
     * Adds Primary fields to the form
     *
     * @param \Magento\Framework\Data\Form $form
     * @param \Epicor\AccessRight\Model\RoleModel $role
     *
     * @return void
     */
    protected function addFlagFields($form, $role)
    {

        $fieldset = $form->addFieldset('settings_fields', array('legend' => __('Access Role Settings')));
        /* @var $fieldset Varien_Data_Form_Element_Fieldset */

        $disableEdit =  false;

        $fieldset->addField(
            'priority', 'text', array(
            'label' => __('Priority'),
            'name' => 'priority',
            'class' => 'validate-number',
            'disabled' => $disableEdit
            )
        );

        $fieldset->addField(
            'auto_assign', 'checkbox', array(
                'label' => __('Is Auto Assigned?'),
                'tabindex' => 1,
                'value' => 1,
                'name' => 'auto_assign',
                'checked' => $role->getAutoAssign()
            )
        );

    }

    /**
     * Gets the current Role
     *
     * @return \Epicor\AccessRight\Model\RoleModel
     */
    public function getRole()
    {
        if (!isset($this->_role)) {
            $this->_role = $this->registry->registry('role');
        }
        return $this->_role;
    }

}

<?php
/**
 * Copyright Â© 2010-2018 Epicor Software Corporation: All Rights Reserved
 */

namespace Epicor\AccessRight\Controller\Adminhtml\Roles;

class Save extends \Epicor\AccessRight\Controller\Adminhtml\Roles
{

    /**
     * @var \Magento\Backend\Model\Session
     */
    protected $backendSession;

    /**
     * Rules model factory
     *
     * @var \Epicor\AccessRight\Model\RulesFactory
     */
    protected $_rulesFactory;

    public function __construct(
        \Epicor\AccessRight\Controller\Adminhtml\Context $context,
        \Magento\Backend\Model\Auth\Session $backendSession,
        \Epicor\AccessRight\Model\RulesFactory $rulesFactory
    )
    {
        $this->backendSession = $backendSession;
        $this->_rulesFactory = $rulesFactory;
        parent::__construct($context, $backendSession);
    }

    /**
     * Role save action
     *
     * @return \Magento\Framework\App\ResponseInterface|\Magento\Framework\Controller\ResultInterface|void
     * @throws \Exception
     */
    public function execute()
    {
        if ($data = $this->getRequest()->getPost()) {
            $resource = $this->getRequest()->getParam('resource', false);
            /* Is data is duplicated from ID */
            $duplicateFromId = null;
            if (isset($data['cid']) && $data['cid'] != null) {
                $duplicateFromId = $data['cid'];
            }
            $role = $this->loadEntity($duplicateFromId);
            /* @var $role Epicor/AccessRight/Model/RoleModel */

            $this->processDetailsSave($role, $data);
            $this->processERPAccountsSave($role, $data);
            $this->processCustomersSave($role, $data);

            $role->orphanCheck();
            $valid = $role->validate();
            $session = $this->backendSession;

            if ($valid === true) {
                /* If Controller is duplicate then Id field value should new autogenerated */
                if ($duplicateFromId != null) {
                    $role->setId(null);
                }
                $role->save();
                $this->_rulesFactory->create()->setAccessRoleId($role->getId())->setResources($resource)->saveRel();
                $this->messageManager->addSuccessMessage(__('Role Saved Successfully'));

                if ($this->getRequest()->getParam('back')) {
                    $this->_redirect('*/*/edit', array('id' => $role->getId()));
                } else {
                    $this->_redirect('*/*/');
                }
            } else {
                $this->messageManager->addErrorMessage(__('The Following Error(s) occurred on Save:'));
                foreach ($valid as $error) {
                    $this->messageManager->addErrorMessage($error);
                }
                $session->setFormData($data);
                $this->_redirect('*/*/edit', array('id' => $role->getId()));
            }
        } else {
            $this->_redirect('*/*/');
        }
    }

}
